(yyyy-mm-dd)

-------------------------------
2013-01-04 - 0.466 (alpha)
    * Fixed mic crash
    * Readded goodgame.ru to services.xconfig after mistakenly
      taking it out at some point

-------------------------------
2013-01-02 - 0.465 (alpha)
    * Finally implemented capture card audio output options
    * Added options to adjust microphone and capture card audio
      time
    * Added an auto-updater courtesy of R1CH
    * Added a new and improved installer in NSIS courtesy of R1CH
    * Added improved volume meters courtesy of Bill Hamilton once
      again
    * Made it so that windows won't go into an idle state while
      streaming
    * Fixed a bug where the recieve buffer could fill up and cause
      spontaneous disconnecting for the user
    * Fixed more issues related to mic syncing by forcing all
      non-desktop audio sources to use the desktop audio time
      (which seems to always be valid) as a base.
    * Fixed a bug with stream keys/play paths failing
    * Fixed a bug with game capture not being properly movable
    * Removed the ability for the sound system to ever calculate
      timestamps.  Made it always use proper timestamping.
    * Fixed a bug where MP4 audio wasn't recording proper audio
      time offsets
    * Fixed some bugs in text and utility stuff courtesy of
      HomeWorld
    * Fixed some memory leaks

-------------------------------
2012-12-16 - 0.461 (alpha)
    * Made game capture sizable/positionable, and added the option
      to ignore aspect
    * Added mouse cursor to win 8 capture
    * Made it so that changing profiles updates all profile hotkeys
      and the dashboard link and all that
    * Fixed a bug where push to talk and muting was delayed by 700
      milliseconds due to scene buffering

-------------------------------
2012-12-16 - 0.460 (alpha)
    * Fixed a crash that could happen when calculating volume levels
    * Removed an annoying memory leak from audio stuff
    * Fixed a bug when removing multiple sources at once that could
      cause the app to crash
    * Fixed a similar bug with removing global sources where the app
      could crash

-------------------------------
2012-12-16 - 0.459 (alpha)
    * Reverted volume adjusters to linear rather than DB as it
      unfortunately confused almost every user (sorrry about that
      bill)

-------------------------------
2012-12-15 - 0.458 (alpha)
    * Fixed issue with audio timestamps "springing" back in time when
      they reach a certain threshold, and thus destroying the stream
    * Added a test version of the new windows 8 capture

-------------------------------
2012-12-14 - 0.457 (alpha)
    * More issues regarding mic problems
    * Align all audio data and only adjust time when a certain
      threshold is reached
    * Fixed a crash in game capture
    * Changed audio levels to be instant response by sampling the
      latest audio data

-------------------------------
2012-12-13 - 0.456 (alpha)
    * Fixed an issue where the scene buffering was too small and mics
      couldn't be heard

-------------------------------
2012-12-13 - 0.455 (alpha)
    * Fixed issues with the way the data being sent, data output
      should now be "correct" so to speak, the SEI/PPS/SPS/keyframe
      are now all put into the same packet, where as they were
      separated before.  This fixes problems with transcoders and
      things like the twitch preview/thumbnail thing.  Hopefully.
    * Fixed pretty much all issues related to sync by using a
      universal method of timestamp calculation.  Desktop audio
      and video now calculate timestamps the same way, and therefore
      time should now be exact at all times (outside of weird issues)
    * Added audio level bars courtesy of the awesome Bill Hamilton of
      Texas A&M University.
    * Fixed problems where game capture would have trouble aquiring
      due to using window message communication instead of something
      that's actually sensable
    * Added "Bind to interface" option to bind to a specific network
      interface (for example, using multiple network connections)
    * Fixed other random bugs that I can't remember

-------------------------------
2012-12-05 - 0.45 (alpha)
    * Fixed bug where game capture and the app can crash due to
      bad IPC
    * Fixed bugs with text output, added outline (thanks to
      HomeWorld)
    * Fixed major throughput bug with networking (changed SO_SNDBUF
      to 64k by default)
    * Fixed CTS issue entirely (thanks to Cyrus)
    * Fixed windows 8 bug where sleep goes for 1ms more than
      intended
    * Fixed graphics capture bugs
    * Fixed other random bugs and stuff
    * Got rid of a memory leak in graphics capture
    * Added CBR feature
    * Other random bug fixes that I unfortunately can't remember

-------------------------------
2012-11-25 - 0.448 (alpha)
    * Fixed memory leak caused by the mouse cursor data not being
      freed
    * Fixed a potential crash that can happen to both the game and
      the application in certain cases
    * Padded CTS values by 75ms to compensate for any negative CTS
      deviations

-------------------------------
2012-11-23 - 0.447 (alpha)
    * Changed the game capture cursor to use a regular texture
      rather than use a GDI texture, GDI texture went screwy
      on some GPUs, so rendered it to a DIB section instead
      and just copied the results
    * More reverts and adjustments with the frame drop code to
      prevent annoying frame drops, will add new frame drop code
      later
    * Fixed a bug in the new librtmp code that would cause it to
      crash

-------------------------------
2012-11-22 - 0.446 (alpha)
    * Finally just about completed game capture (wow was that a
      crazy adventure)
    * Added GIF support to bitmap image source
    * Added stream delay feature
    * Adde option to allow users to use up to 120 FPS (if they're
      crazy)
    * Made send buffer use multiples of the maximum segment size
      instead of powers of two
    * Added new awesome crash code by R1CH
    * Fixed various issues with the text source
    * Changed the way RTMP server data is entered, it now uses the
      proper FMS server entry format
    * Added opacity to video capture
    * Added stream timer
    * Fixed some code in librtmp to process FMS URLs properly

-------------------------------
2012-11-02 - 0.432 (alpha)
    * Fixed GDI+ output not displaying on some computers
    * Changed text source so that text extents do not cut off
      text
    * Added color key option to software capture
    * Changed color key in directshow plugin to chroma key, made
      it not suck (thanks to muf, he pointed out important
      equations)
    * Changed the way framerate works in directshow plugin, it
      now internally works on frame intervals instead of trying
      to (incorrectly) input intervals -- will always use the
      closest valid interval available.  FPS now functions in
      floating point units instead of integers.
    * Added a feature to allow the user to select the output type
      from his/her device, which is useful is many cases
      apparently.
    * Changed hotkeys so that you can now bind Alt/Shift/Ctrl
      by themselves.

-------------------------------
2012-10-28 - 0.43 (alpha)
    * Added text output source
    * Added color key option to directshow plugin
    * Added HDYC support for capture cards such as the blackmagic
      intensity (R1CH)
    * Threaded the image conversion (444->420, packplanar)
      functions and increased the performance of the app overall
    * Fixed the PackPlanar function in directshow so that it
      properly utilizes CPU cache, it is now far far faster
    * Fixed tons of bugs, especially many related to lists
    * Fixed annoying bug that caused status bar to flash when it
      updated
    * Reverted network code to better previous code
    * Improved frame drop mechanic
    * Still doing major R&D work on the game capture plugin

-------------------------------

2012-10-11 - 0.421 (alpha)
    * Fixed thread lock hang caused by setting the status bar (r1ch)
    * Fixed flickering when resizing the main window (thanks to
      HomeWorld on teamliquid for the fix)
    * Fixed an "out of range" crash that could happen randomly when
      using the sync fix
    * Changed mic boost to be a 1-20 multiplier instead of 100-400%
    * Edit controls with scrollers are no longer read-only

-------------------------------

2012-10-10 - 0.42 (alpha)
    * Added "Start Stream" hotkey
    * Made a hotkey thread so I can have hotkeys on all the time
    * Added a "dashboard button" someone requested
    * Added a menubar
    * Got rid of the bandwidth meter thing and instead replaced it
      with a status bar control
    * Status bar now shows dropped frames and FPS as well as any
      potential information that the streamer may need to see
    * Added a few features to the bitmap and bitmap transition
      sources
    * Fixed sync bugs, audio now uses proper timestamps provided
      by the WASAPI
    * Also improved the "Sync Fix" calculated timestamp option,
      fully calculated timestamps are now much more accurate and
      smooth when capture FPS is the same as the max FPS.
    * Added YUV4:2:2 support to the DirectShow plugin, and improved
      the format priority
    * Added a "force mono" option for the mic as requested by a user
    * Added a "mic boost" option so that mic levels can be boosted
    * Improved compatibility with computers
    * Got rid of the garbled screen output bug (d3d pitch wasn't
      being used)
    * Got rid of various bugs related to adding/removing sources,
      as well as adding/removing global sources.  They weren't
      entering the scene mutex as they should have been
    * Improved network code again, made it so that packets are never
      cut in half.  Automatically flushes packets now after 500
      milliseconds to reduce latency issues with high buffer sizes.
    * Fixed FLV file issue
    * Added a progress dialog when building the MP4 files

-------------------------------

2012-10-3 - 0.411 (alpha)
    * Made D3D10_LEVEL_9_3 the default again, but still with the
      option to turn it off.  Seems some cards relied on it more
      than others.

-------------------------------

2012-10-2 - 0.41 (alpha)
    * Fixed bug with certain video devices where they stored their
      video formats in the fourCC part of the bmiHeader instead of
      the AM_MEDIA_TYPE subformat.  Also, I hate DirectShow.
    * Fixed hotkey problem, and added mouse hotkey support.
    * Made D3D10_LEVEL_9_3 an option in advanced settings rather
      than the default.
    * Added code to allow custom coloring/transparency in the
      DrawSprite/DrawSpriteEx functions
    * Added a hotkey for disconnecting.
    * Added a slide show image source that allows a user to display
      multiple transitioning images in a single area.
    * Added default names to the naming dialog.  A decent temporary
      fix until I can do the UI review.
    * Added a "Fit to screen" option for sources that allows a user
      to make a source fit on the screen.

-------------------------------

2012-9-28 - 0.401 (alpha)
    * Fixed a bug in the 444->420 conversion function that caused it
      to lose chroma data in the SSE code

-------------------------------

2012-9-27 - 0.40 (alpha)
    * Added the feature to save to MP4 and FLV files.  Going to delay
      on AVI because I'm slightly lazy and because AVI files suck.
    * Took out the RTMP server code, not necessary anymore now that
      saving to files is in.
    * Added a variety of hotkeys for audio, such as push to talk,
      or muting the mic or desktop completely.
    * Fixed network bugs, made it so that the SEI packet is transferred
      after the video headers are sent.
    * Fixed onMetaData not sending correctly.
    * Fixed bugs in the downscale shaders that could cause inaccurate
      downscales, and also made colors more accurate now that the SEI
      packet is properly being sent
    * Added options for automatically reconnecting to the server once
      disconnected.
    * Added an advanced settings section that allows users to configure
      x264 custom parameters, as well as internal advanced options or
      fixes for various other things if necessary

-------------------------------

2012-9-22 - 0.381 (alpha)
    * Had to remove the FPS display code because it was causing a
      notable performance drop.  do -not- set the swap chain to GDI
      compatible.

-------------------------------

2012-9-20 - 0.38 (alpha)
    * Changed the way settings are saved.  All settings are now saved
      to the windows [user]/AppData/Roaming/OBS directory.
    * Made it so up to 20 log files are saved at a given time, so that
      older logs are not necessarily just overwritten.
    * Added setting profiles so the user can have different settings
      for different situations.
    * Fixed a major mic mug with mono mics.  Don't know how I let that
      one slip by me for so long.
    * More DShow bug fixes by R1CH
    * Added a popup menu when right clicking on the render frame that
      lets the user see the FPS or disable the render view.
    * Improved API hotkey code

-------------------------------

2012-9-16 - 0.37 (alpha)
    * Added global hotkeys to the API interface, and scene hotkeys so
      users can switch between scenes with the press of a key
    * Added tooltips
    * Added a fix for specific CPUs that have issue with timers and
      video/audio syncing.
    * More network code improvements and adjustments

-------------------------------

2012-9-12 - 0.36 (alpha)
    * Fixed more directshow bugs
    * Fixed bug that caused non-twitch services to be saved as twitch
    * Attempted to fix AMD CPU issue by setting the main capture thread
      affinity -- needs testing again.
    * Added a message box that let's you know if the server has
      disconnected you.

-------------------------------

2012-9-10 - 0.35 (alpha)
    * Added send buffering to the RTMP publisher (major thanks to
      frostshocker, modnite, kendobear, and d2ultima for helping test
      out and verify this new technique)
    * Added a few features to the version of librtmp I use to allow
      for custom adjustments
    * Tweaked network settings again
    * Fixed a directshow issue where some resolutions could cause a
      crash (thanks to R1CH for pointing out the code directly)
    * Switched to D3D10.1 to improve compatibility with devices
      (thanks to d2ultima for pointing out his d3d11 incompatibility)

-------------------------------

2012-9-08 - 0.34 (alpha)
    * Reworked network publish code, added I-Frame-Delay algorithm to
      automatically drop frames based upon usage if possible
    * Added a little network control thing so users can see their
      bandwidth usage, and to see if there's any network strain
    * 7.1 should no longer have sound issues, but code is still
      experimental
    * updated x264 settings, was using a poor setting choice.  should
      give a much better compression ratio now under most CPU presets.
    * tweaked capture code again, didn't like the way window capture
      would display a black box every time you minimized a window.
      instead it now just freezes the frame.
    * Added the ability to type in custom resolution in the directshow
      video devices plugin.
   
-------------------------------

2012-9-06 - 0.33 (alpha)
    * Fixed issue with bitmaps of non-power-of-two sizes not displaying
    * Added region capture and window specific capture.  Window specific
      capture seems super fast.  Was getting like 50-60 FPS average from
      starcraft 2 for example.
    * Fixed some other minor issues and potential bugs
    * Added own3d with some servers to the services list


-------------------------------

2012-9-01 - 0.32 (alpha)
    * Fixed a crash when adding sources in some situations
    * Fixed some crashes related to audio code, forgot to make sure
      that the audio buffers were on a 128bit boundry before using SSE
      instructions (happened to me as well).  Which means mics and audio
      devices should hopefully work properly now.
    * Fixed a potential crash with x264 (Apparently you should only really
      query the x264 header packets before it starts encoding, otherwise
      you risk crashing)
    * Fixed a MAJOR bug with framerates and video smoothness, the cause
      was due to the fact that b-frames can have a reverse timestamp after
      p-frames, and I did not take that into account when sending packets.
      Updated the AVC packet code, frames are now displaying at the
      intended intervals.  Wow was that one difficult to pinpoint, as well
      as fix.
    * Added 7.1 speaker support, apparently I didn't actually put it in.
      People have some nice speaker setups.

-------------------------------

2012-8-28 - 0.31 (alpha)
    * Received my video capture card, discovered a few bugs
      in my DirectShow code that needed fixing
    * Made DirectShow work with a few YUV planar formats

-------------------------------

2012-8-26 - 0.3 (alpha)
    * Finished first version of the API DLL interface so that
      developers can write their own plugins
    * Finished first version of the DirectShow device plugin,
      still needs some testing
    * Refactored audio code and mixer due to minor code design
      flaws I didn't forsee
    * Completely rewrote graphics code, made a graphics wrapper
      so that D3D11 is completely handled behind the scenes
    * Added ability to use global sources that persist until
      the stream ends (best used for video devices)
    * Fixed a ton of bugs

-------------------------------

2012-8-10 - 0.2 (alpha)
    * First "usable" state, still many features to be written

-------------------------------

